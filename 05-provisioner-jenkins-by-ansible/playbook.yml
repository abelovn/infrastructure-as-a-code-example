- hosts: jenkins
  become: yes
  pre_tasks:
    - name: Update apt cache.
      apt: update_cache=true cache_valid_time=600
      when: ansible_os_family == 'Debian'
      changed_when: false
  roles:
    - role: robertdebock.java
    - role: robertdebock.jenkins
  post_tasks:
    - name: get initialAdminPassword
      shell: cat /var/lib/jenkins/secrets/initialAdminPassword
      register: adminpwd

    - name: Print adminpwd var
      debug:
        var: adminpwd['stdout']

    - name: Print ansible_ssh_host var
      debug:
        var: ansible_ssh_host

    - name: unlock and add admin user
      jenkins_script:
        script: |
          import jenkins.model.*
          import hudson.security.*
          def instance = Jenkins.getInstance()
          def hudsonRealm = new HudsonPrivateSecurityRealm(false)
          hudsonRealm.createAccount('jenkins', '${user_pwd}')
          instance.setSecurityRealm(hudsonRealm)
          def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
          strategy.setAllowAnonymousRead(false)
          instance.setAuthorizationStrategy(strategy)
          instance.save()
        args:
          user_pwd: "{{ adminpwd }}"
        user: admin
        password: "{{ adminpwd.stdout }}"

    - name: complete setup wizard
      jenkins_script:
        script: |
          import static jenkins.model.Jenkins.instance as jenkins
          import jenkins.install.InstallState
          if (!jenkins.installState.isSetupComplete()) {
            InstallState.INITIAL_SETUP_COMPLETED.initializeState()
          }
        user: admin
        password: "{{ adminpwd.stdout }}"

    - name: Install Plugins on behalf of jenkins user "admin"
      jenkins_plugin:
        name: "{{ item.key }}"
        url: http://{{ ansible_ssh_host }}:8080
        url_username: "admin"
        url_password: "{{ adminpwd['stdout'] }}"
      register: plugin_result
      until: plugin_result is success
      with_items: # no version = latest
        - { key: "cloudbees-folder"}
        - { key: "antisamy-markup-formatter"}
        - { key: "build-timeout"}
        - { key: "credentials-binding"}
        - { key: "timestamper"}
        - { key: "ws-cleanup"}
        - { key: "ant"}
        - { key: "gradle"}
        - { key: "workflow-aggregator"}
        - { key: "github-branch-source"}
        - { key: "pipeline-github-lib"}
        - { key: "pipeline-stage-view"}
        - { key: "git"}
        - { key: "ssh-slaves"}
        - { key: "matrix-auth"}
        - { key: "pam-auth"}
        - { key: "ldap"}
        - { key: "email-ext"}
        - { key: "mailer"}

    - name: Restart Jenkins
      ansible.builtin.service:
        name: jenkins
        state: restarted

    - name: Wait for Jenkins to start up
      ansible.builtin.uri:
        url: http://{{ ansible_ssh_host }}:8080
        status_code: 200,403
        timeout: 5
      register: result
      retries: 60
      delay: 5
      until: result.status == 403 or result.status == 200

    - name: get initialAdminPassword
      shell: cat /var/lib/jenkins/secrets/initialAdminPassword
      register: adminpwd2

    - name: Print adminpwd2 var
      debug:
        var: adminpwd2['stdout']